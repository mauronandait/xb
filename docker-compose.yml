version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15
    container_name: tennis_betting_db
    environment:
      POSTGRES_DB: tennis_betting
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tennis_network
    restart: unless-stopped

  # Aplicación principal
  app:
    build: .
    container_name: tennis_betting_app
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=tennis_betting
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - LOG_LEVEL=INFO
    ports:
      - "8501:8501"  # Streamlit
      - "8000:8000"  # API (si se implementa)
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
      - ./notebooks:/app/notebooks
      - ./data:/app/data
    depends_on:
      - postgres
    networks:
      - tennis_network
    restart: unless-stopped
    command: streamlit run src/dashboard.py --server.port 8501 --server.address 0.0.0.0

  # Redis para caché y colas (opcional)
  redis:
    image: redis:7-alpine
    container_name: tennis_betting_redis
    ports:
      - "6379:6379"
    networks:
      - tennis_network
    restart: unless-stopped

  # pgAdmin para administrar PostgreSQL (opcional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: tennis_betting_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@tennis.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - tennis_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  tennis_network:
    driver: bridge
